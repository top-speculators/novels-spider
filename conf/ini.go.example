package conf

var (
    Port        = ":8000"
    Domain      = ""
    Debug       = true
    AppPath     = ""
    RuntimePath = "/data/logs/app/novels-spider/"

    BlogDB    = "blog.db?_loc=Asia/Shanghai"
    BlogDBLog = RuntimePath + "logs/blogdb.log"

    // LogCommonFileForGin = RuntimePath + "logs/app_common_gin.log" // gin 默认输出的日志
    // LogCommonFile       = RuntimePath + "logs/app_common.log"     // 代码级 error，意料内的 error
    // LogErrorFile        = RuntimePath + "logs/app_error.log"      // recover 的 error，意料之外，由 gin 捕获

    Log = map[string]string{
        "path":        "logs/",
        "name":        "novels-spider",
        "time_format": "20060102",
        "ext":         "log",
    }

    QUEUE_DRIVER         = "amqp" // 队列驱动枚举 amqp 、kafka
    QUEUE_CHANNEL_NUMBER = 4      // 并发消费goroutine数量

    AMQP = map[string]string{
        "user":     "guest",
        "password": "guest",
        "host":     "127.0.0.1",
        "port":     "5672",
        "vhost":    "/",
    }

    MysqlAvatarRead = map[string]string{
        "username":  "root",
        "password":  "root",
        "ip":        "127.0.0.1",
        "database":  "spider_coo_avatar",
        "charset":   "utf8",
        "parseTime": "True",
        "loc":       "Local",
        "port":      "3306",
    }
    MysqlAvatarWrite = map[string]string{
        "username":  "root",
        "password":  "root",
        "ip":        "127.0.0.1",
        "database":  "spider_coo_avatar",
        "charset":   "utf8",
        "parseTime": "True",
        "loc":       "Local",
        "port":      "3306",
    }
    MysqlAvatarLog = map[string]string{
        "read":  RuntimePath + "logs/avatar_read.log",
        "write": RuntimePath + "logs/avatar_write.log",
    }

    Beanstalkd = "127.0.0.1:11300"
)
